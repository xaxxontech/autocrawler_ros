cmake_minimum_required(VERSION 2.8.3)
project(df)

## Compile as C++11, supported in ROS Kinetic and newer
 add_compile_options(-std=c++11)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
  image_transport
  sensor_msgs
)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

#find_package(PkgConfig)
#pkg_check_modules(GSTREAMER REQUIRED gstreamer-1.0)
#pkg_check_modules(GST_APP REQUIRED gstreamer-app-1.0)
#pkg_check_modules(GST_SDP REQUIRED gstreamer-sdp-1.0)
#pkg_check_modules(GST_WEBRTC REQUIRED gstreamer-webrtc-1.0)
#pkg_check_modules(LIBSOUP REQUIRED libsoup-2.4)
#pkg_check_modules(JSONGLIB REQUIRED json-glib-1.0)


#find_package(PkgConfig)

#macro(find_gstreamer_component prefix pkg lib)
  #pkg_check_modules(PC_${prefix} REQUIRED ${pkg})
  #find_library(${prefix}_LIBRARIES NAMES ${lib} HINTS ${PC_${prefix}_LIBRARY_DIRS} ${PC_${prefix}_LIBDIR})
  #list(APPEND gstreamer_INCLUDE_DIRS ${PC_${prefix}_INCLUDE_DIRS})
  #list(APPEND gstreamer_LIBRARIES ${${prefix}_LIBRARIES})
  #mark_as_advanced(${prefix}_LIBRARIES gstreamer_LIBRARIES gstreamer_INCLUDE_DIRS)
#endmacro()

##order matters..
#find_gstreamer_component(jsonglib   json-glib-1.0   jsonglib-1.0)
#find_gstreamer_component(lsoup   libsoup-2.4   lsoup-2.4)
#find_gstreamer_component(gstreamer      gstreamer-1.0       gstreamer-1.0)
#find_gstreamer_component(gstapp   gstreamer-app-1.0   gstapp-1.0)
#find_gstreamer_component(gstsdp   gstreamer-sdp-1.0   gstsdp-1.0)
#find_gstreamer_component(gstwebrtc   gstreamer-webrtc-1.0   gstwebrtc-1.0)
#find_gstreamer_component(glib   glib-2.0   glib-2.0)
#find_gstreamer_component(gobject   gobject-2.0   gobject-2.0)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
  #LIBRARIES df
  #CATKIN_DEPENDS roscpp rospy std_msgs image_transport sensor_msgs
  #DEPENDS GSTREAMER GST_APP GST_SDP GST_WEBRTC LIBSOUP JSONGLIB
)

###########
## Build ##
###########

include_directories(
# include
  ${catkin_INCLUDE_DIRS},
  	#${gstreamer_INCLUDE_DIRS}
  	glib-2.0, gstreamer-1.0, gstreamer-sdp-1.0, gstreamer-webrtc-1.0, json-glib-1.0, libsoup-2.4
)

# Declare a C++ library
#add_library(df
	#src/webrtcrealsense.cpp
#)

#target_link_libraries(webrtcrealsense
	#${catkin_LIBRARIES}
	#${gstreamer_LIBRARIES}   
#)


add_executable(webrtcrealsense
  src/webrtcrealsense.cpp
)

#target_compile_options(webrtcrealsense PUBLIC $(pkg-config --cflags --libs gstreamer-webrtc-1.0 gstreamer-sdp-1.0 libsoup-2.4 json-glib-1.0))

 
target_link_libraries(webrtcrealsense
	${catkin_LIBRARIES},
	#${gstreamer_LIBRARIES}   
	glib-2.0, gstreamer-1.0, gstreamer-sdp-1.0, gstreamer-webrtc-1.0, json-glib-1.0, libsoup-2.4
)



#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
 install(PROGRAMS
#   scripts/my_python_script
   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
 )

## Mark executables and/or libraries for installation
 install(TARGETS webrtcrealsense
   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
 )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_df.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
